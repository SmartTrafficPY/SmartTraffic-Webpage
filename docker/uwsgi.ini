[uwsgi]
strict = true

socket = 0.0.0.0:8000
http-socket = 0.0.0.0:8888

;uid = user
;gid = user
master = 1
processes = 2
threads = 4
; kill the process after being stuck on a request for 30 seconds
harakiri = 30
; reload worker after 1000 requests
max-requests = 1000
buffer-size = 8192

enable-threads = true

optimize = 2

chdir = /home/user/code
wsgi-file = smwebsite/wsgi.py

# fix for errors on db reading
lazy-apps = true

log-format = [msec: %(msecs)] %(addr) - %(user) [%(ltime)] "%(method) %(uri) %(proto)" %(status) %(size) "%(referer)" "%(uagent)"

stats = :5050

static-map = /static=/home/user/static
static-gzip-all = 1

# route-host = ^(.*):8883$ goto:routing-for-metrics
# route-host = ^(.*):8881$ goto:routing-for-metrics
# route = ^/favicon.ico return:404
# route = ^/static/.*\.map return:404
# route-qs = .+ addvar:HAS_QS=?
# route-host = ^www\.(.*)$ redirect-301:http://$1${PATH_INFO}${HAS_QS}${QUERY_STRING}
# ;route = ^/metrics/?$ return:404
# route = .* last:
#
# route-label = routing-for-metrics
# route = ^/metrics/?$ goto:metrics-pass
# route = .* return:404
# route-label = metrics-pass
#
# error-route-status = 200 goto:cacheforever
# error-route-status = 304 goto:cacheforever
# error-route = ^/static/(.) addheader:Cache-Control: no-cache, no-store, must-revalidate
# error-route = ^/static/(.) addheader:Pragma: no-cache
# error-route = ^/static/(.) addheader:Expires: 0
# error-route = .* last:
#
# error-route-label = cacheforever
# error-route = ^/static/(.) addheader:Cache-Control: public, max-age=2592000
